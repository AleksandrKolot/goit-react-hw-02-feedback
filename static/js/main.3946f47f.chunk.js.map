{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","data/Options.jsx","App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","FeedbackBtn","feedback","onLeaveFeedback","className","s","button","type","data-feedback","onClick","FeedbackOptions","options","map","option","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","list","item","OPTIONS","App","state","handleSelectedFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","console","log","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,wKCe1CC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,mCAAMD,EAAN,OACCC,M,gBCHDC,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,wBACEC,UAAWC,IAAEC,OACbC,KAAK,SACLC,gBAAeN,EACfO,QAASN,EAJX,SAMGD,KAeQQ,EAXS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASR,EAAsB,EAAtBA,gBAClC,OAAOQ,EAAQC,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAAaX,SAAUW,EAAQV,gBAAiBA,Q,gBCTrCW,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCyB3BC,EAvBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACGD,EAAQ,GACP,qBAAIhB,UAAWC,IAAEiB,KAAjB,UACE,qBAAIlB,UAAWC,IAAEkB,KAAjB,mBAA8BN,KAC9B,qBAAIb,UAAWC,IAAEkB,KAAjB,sBAAiCL,KACjC,qBAAId,UAAWC,IAAEkB,KAAjB,kBAA6BJ,KAC7B,qBAAIf,UAAWC,IAAEkB,KAAjB,oBAA+BH,KAC/B,qBAAIhB,UAAWC,IAAEkB,KAAjB,kCAA6CF,QAGtC,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BChB/BS,G,MAAU,CAAC,OAAQ,UAAW,QC2D5BC,E,4MAlDbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPQ,uBAAyB,YAAiB,IAChCzB,EAD+B,EAAb0B,OACEC,QAApB3B,SACR,EAAK4B,UAAS,SAACC,GAAD,sBACX7B,EAAW6B,EAAU7B,GAAY,O,EAItC8B,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBT,KADiB,EACXC,QADW,EACFC,K,EAGzBc,gCAAkC,WAAO,IAC/BhB,EAAS,EAAKS,MAAdT,KACFG,EAAQ,EAAKY,qBACnB,OAAOZ,EAAQc,KAAKC,MAAOlB,EAAOG,EAAS,KAAO,G,uDAIlDgB,QAAQC,IAAIC,KAAKZ,OADV,MAEwBY,KAAKZ,MAA5BT,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IACjBC,EAAQkB,KAAKN,qBACbX,EAAqBiB,KAAKL,kCAChC,OACE,gCACE,cAAC,EAAD,CAASlC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEY,QAASa,EACTrB,gBAAiBmC,KAAKX,wBACjBH,KAGT,cAAC,EAAD,CAASzB,MAAM,aAAf,SACE,cAAC,EAAD,CACEkB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA3CdkB,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BhD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.3946f47f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__35DVR\",\"item\":\"Statistics_item__TdH9q\"};","import PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2> {title} </h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackBtn = ({ feedback, onLeaveFeedback }) => {\r\n  return (\r\n    <button\r\n      className={s.button}\r\n      type=\"button\"\r\n      data-feedback={feedback}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map((option) => (\r\n    <FeedbackBtn feedback={option} onLeaveFeedback={onLeaveFeedback} />\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <ul className={s.list}>\r\n          <li className={s.item}>Good: {good}</li>\r\n          <li className={s.item}>Neutral: {neutral}</li>\r\n          <li className={s.item}>Bad: {bad}</li>\r\n          <li className={s.item}>Total: {total}</li>\r\n          <li className={s.item}>Positive Percentage: {positivePercentage}</li>\r\n        </ul>\r\n      )}\r\n      {total === 0 && <Notification message=\"No feedback given\" />}\r\n    </>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","export const OPTIONS = [\"good\", \"neutral\", \"bad\"];\r\n","import { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\n\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport \"./App.css\";\nimport { OPTIONS } from \"./data/Options\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handleSelectedFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState((prevState) => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    console.log(this.state);\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={OPTIONS}\n            onLeaveFeedback={this.handleSelectedFeedback}\n            key={OPTIONS}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__EFVB5\"};"],"sourceRoot":""}